// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: smaf.proto

#include "smaf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace smaf {
class VM5VoiceLibDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VM5VoiceLib>
      _instance;
} _VM5VoiceLib_default_instance_;
class VM35VoicePCDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VM35VoicePC>
      _instance;
} _VM35VoicePC_default_instance_;
class VM35FMVoiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VM35FMVoice>
      _instance;
} _VM35FMVoice_default_instance_;
class VM35FMOperatorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VM35FMOperator>
      _instance;
} _VM35FMOperator_default_instance_;
class VM35PCMVoiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VM35PCMVoice>
      _instance;
} _VM35PCMVoice_default_instance_;
}  // namespace smaf
namespace protobuf_smaf_2eproto {
void InitDefaultsVM5VoiceLibImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_smaf_2eproto::InitDefaultsVM35VoicePC();
  {
    void* ptr = &::smaf::_VM5VoiceLib_default_instance_;
    new (ptr) ::smaf::VM5VoiceLib();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::smaf::VM5VoiceLib::InitAsDefaultInstance();
}

void InitDefaultsVM5VoiceLib() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVM5VoiceLibImpl);
}

void InitDefaultsVM35VoicePCImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_smaf_2eproto::InitDefaultsVM35FMVoice();
  protobuf_smaf_2eproto::InitDefaultsVM35PCMVoice();
  {
    void* ptr = &::smaf::_VM35VoicePC_default_instance_;
    new (ptr) ::smaf::VM35VoicePC();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::smaf::VM35VoicePC::InitAsDefaultInstance();
}

void InitDefaultsVM35VoicePC() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVM35VoicePCImpl);
}

void InitDefaultsVM35FMVoiceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_smaf_2eproto::InitDefaultsVM35FMOperator();
  {
    void* ptr = &::smaf::_VM35FMVoice_default_instance_;
    new (ptr) ::smaf::VM35FMVoice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::smaf::VM35FMVoice::InitAsDefaultInstance();
}

void InitDefaultsVM35FMVoice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVM35FMVoiceImpl);
}

void InitDefaultsVM35FMOperatorImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::smaf::_VM35FMOperator_default_instance_;
    new (ptr) ::smaf::VM35FMOperator();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::smaf::VM35FMOperator::InitAsDefaultInstance();
}

void InitDefaultsVM35FMOperator() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVM35FMOperatorImpl);
}

void InitDefaultsVM35PCMVoiceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::smaf::_VM35PCMVoice_default_instance_;
    new (ptr) ::smaf::VM35PCMVoice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::smaf::VM35PCMVoice::InitAsDefaultInstance();
}

void InitDefaultsVM35PCMVoice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVM35PCMVoiceImpl);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM5VoiceLib, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM5VoiceLib, programs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35VoicePC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35VoicePC, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35VoicePC, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35VoicePC, bank_msb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35VoicePC, bank_lsb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35VoicePC, pc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35VoicePC, drum_note_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35VoicePC, voice_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35VoicePC, fm_voice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35VoicePC, pcm_voice_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMVoice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMVoice, drum_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMVoice, panpot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMVoice, bo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMVoice, lfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMVoice, pe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMVoice, alg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMVoice, operators_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMOperator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMOperator, multi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMOperator, dt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMOperator, ar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMOperator, dr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMOperator, sr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMOperator, rr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMOperator, sl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMOperator, tl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMOperator, ksl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMOperator, dam_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMOperator, dvb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMOperator, fb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMOperator, ws_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMOperator, xof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMOperator, sus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMOperator, ksr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMOperator, eam_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35FMOperator, evb_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35PCMVoice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::smaf::VM35PCMVoice, raw_data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::smaf::VM5VoiceLib)},
  { 6, -1, sizeof(::smaf::VM35VoicePC)},
  { 20, -1, sizeof(::smaf::VM35FMVoice)},
  { 32, -1, sizeof(::smaf::VM35FMOperator)},
  { 55, -1, sizeof(::smaf::VM35PCMVoice)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::smaf::_VM5VoiceLib_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::smaf::_VM35VoicePC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::smaf::_VM35FMVoice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::smaf::_VM35FMOperator_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::smaf::_VM35PCMVoice_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "smaf.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nsmaf.proto\022\004smaf\"2\n\013VM5VoiceLib\022#\n\010pro"
      "grams\030\001 \003(\0132\021.smaf.VM35VoicePC\"\372\001\n\013VM35V"
      "oicePC\022)\n\007version\030\001 \001(\0162\030.smaf.VM35FMVoi"
      "ceVersion\022\014\n\004name\030\002 \001(\t\022\020\n\010bank_msb\030\003 \001("
      "\r\022\020\n\010bank_lsb\030\004 \001(\r\022\n\n\002pc\030\005 \001(\r\022\021\n\tdrum_"
      "note\030\006 \001(\r\022#\n\nvoice_type\030\007 \001(\0162\017.smaf.Vo"
      "iceType\022#\n\010fm_voice\030\010 \001(\0132\021.smaf.VM35FMV"
      "oice\022%\n\tpcm_voice\030\t \001(\0132\022.smaf.VM35PCMVo"
      "ice\"\212\001\n\013VM35FMVoice\022\020\n\010drum_key\030\001 \001(\r\022\016\n"
      "\006panpot\030\002 \001(\r\022\n\n\002bo\030\003 \001(\r\022\013\n\003lfo\030\004 \001(\r\022\n"
      "\n\002pe\030\005 \001(\010\022\013\n\003alg\030\006 \001(\r\022\'\n\toperators\030\007 \003"
      "(\0132\024.smaf.VM35FMOperator\"\363\001\n\016VM35FMOpera"
      "tor\022\r\n\005multi\030\001 \001(\r\022\n\n\002dt\030\002 \001(\r\022\n\n\002ar\030\003 \001"
      "(\r\022\n\n\002dr\030\004 \001(\r\022\n\n\002sr\030\005 \001(\r\022\n\n\002rr\030\006 \001(\r\022\n"
      "\n\002sl\030\007 \001(\r\022\n\n\002tl\030\010 \001(\r\022\013\n\003ksl\030\t \001(\r\022\013\n\003d"
      "am\030\n \001(\r\022\013\n\003dvb\030\013 \001(\r\022\n\n\002fb\030\014 \001(\r\022\n\n\002ws\030"
      "\r \001(\r\022\013\n\003xof\030\016 \001(\010\022\013\n\003sus\030\017 \001(\010\022\013\n\003ksr\030\020"
      " \001(\010\022\013\n\003eam\030\021 \001(\010\022\013\n\003evb\030\022 \001(\010\" \n\014VM35PC"
      "MVoice\022\020\n\010raw_data\030\001 \001(\014*w\n\022VM35FMVoiceV"
      "ersion\022\032\n\026VM35FMVoiceVersion_MIN\020\000\022\n\n\006VM"
      "3LIB\020\000\022\020\n\014VM3EXCLUSIVE\020\001\022\007\n\003VM5\020\002\022\032\n\026VM3"
      "5FMVoiceVersion_MAX\020\002\032\002\020\001*N\n\tVoiceType\022\021"
      "\n\rVoiceType_MIN\020\000\022\006\n\002FM\020\000\022\007\n\003PCM\020\001\022\006\n\002AL"
      "\020\002\022\021\n\rVoiceType_MAX\020\002\032\002\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 953);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "smaf.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_smaf_2eproto
namespace smaf {
const ::google::protobuf::EnumDescriptor* VM35FMVoiceVersion_descriptor() {
  protobuf_smaf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_smaf_2eproto::file_level_enum_descriptors[0];
}
bool VM35FMVoiceVersion_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* VoiceType_descriptor() {
  protobuf_smaf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_smaf_2eproto::file_level_enum_descriptors[1];
}
bool VoiceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void VM5VoiceLib::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VM5VoiceLib::kProgramsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VM5VoiceLib::VM5VoiceLib()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_smaf_2eproto::InitDefaultsVM5VoiceLib();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:smaf.VM5VoiceLib)
}
VM5VoiceLib::VM5VoiceLib(const VM5VoiceLib& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      programs_(from.programs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:smaf.VM5VoiceLib)
}

void VM5VoiceLib::SharedCtor() {
  _cached_size_ = 0;
}

VM5VoiceLib::~VM5VoiceLib() {
  // @@protoc_insertion_point(destructor:smaf.VM5VoiceLib)
  SharedDtor();
}

void VM5VoiceLib::SharedDtor() {
}

void VM5VoiceLib::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VM5VoiceLib::descriptor() {
  ::protobuf_smaf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_smaf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VM5VoiceLib& VM5VoiceLib::default_instance() {
  ::protobuf_smaf_2eproto::InitDefaultsVM5VoiceLib();
  return *internal_default_instance();
}

VM5VoiceLib* VM5VoiceLib::New(::google::protobuf::Arena* arena) const {
  VM5VoiceLib* n = new VM5VoiceLib;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VM5VoiceLib::Clear() {
// @@protoc_insertion_point(message_clear_start:smaf.VM5VoiceLib)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  programs_.Clear();
  _internal_metadata_.Clear();
}

bool VM5VoiceLib::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:smaf.VM5VoiceLib)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .smaf.VM35VoicePC programs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_programs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:smaf.VM5VoiceLib)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:smaf.VM5VoiceLib)
  return false;
#undef DO_
}

void VM5VoiceLib::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:smaf.VM5VoiceLib)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .smaf.VM35VoicePC programs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->programs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->programs(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:smaf.VM5VoiceLib)
}

::google::protobuf::uint8* VM5VoiceLib::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:smaf.VM5VoiceLib)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .smaf.VM35VoicePC programs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->programs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->programs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:smaf.VM5VoiceLib)
  return target;
}

size_t VM5VoiceLib::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:smaf.VM5VoiceLib)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .smaf.VM35VoicePC programs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->programs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->programs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VM5VoiceLib::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:smaf.VM5VoiceLib)
  GOOGLE_DCHECK_NE(&from, this);
  const VM5VoiceLib* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VM5VoiceLib>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:smaf.VM5VoiceLib)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:smaf.VM5VoiceLib)
    MergeFrom(*source);
  }
}

void VM5VoiceLib::MergeFrom(const VM5VoiceLib& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:smaf.VM5VoiceLib)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  programs_.MergeFrom(from.programs_);
}

void VM5VoiceLib::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:smaf.VM5VoiceLib)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VM5VoiceLib::CopyFrom(const VM5VoiceLib& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:smaf.VM5VoiceLib)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VM5VoiceLib::IsInitialized() const {
  return true;
}

void VM5VoiceLib::Swap(VM5VoiceLib* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VM5VoiceLib::InternalSwap(VM5VoiceLib* other) {
  using std::swap;
  programs_.InternalSwap(&other->programs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VM5VoiceLib::GetMetadata() const {
  protobuf_smaf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_smaf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VM35VoicePC::InitAsDefaultInstance() {
  ::smaf::_VM35VoicePC_default_instance_._instance.get_mutable()->fm_voice_ = const_cast< ::smaf::VM35FMVoice*>(
      ::smaf::VM35FMVoice::internal_default_instance());
  ::smaf::_VM35VoicePC_default_instance_._instance.get_mutable()->pcm_voice_ = const_cast< ::smaf::VM35PCMVoice*>(
      ::smaf::VM35PCMVoice::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VM35VoicePC::kVersionFieldNumber;
const int VM35VoicePC::kNameFieldNumber;
const int VM35VoicePC::kBankMsbFieldNumber;
const int VM35VoicePC::kBankLsbFieldNumber;
const int VM35VoicePC::kPcFieldNumber;
const int VM35VoicePC::kDrumNoteFieldNumber;
const int VM35VoicePC::kVoiceTypeFieldNumber;
const int VM35VoicePC::kFmVoiceFieldNumber;
const int VM35VoicePC::kPcmVoiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VM35VoicePC::VM35VoicePC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_smaf_2eproto::InitDefaultsVM35VoicePC();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:smaf.VM35VoicePC)
}
VM35VoicePC::VM35VoicePC(const VM35VoicePC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_fm_voice()) {
    fm_voice_ = new ::smaf::VM35FMVoice(*from.fm_voice_);
  } else {
    fm_voice_ = NULL;
  }
  if (from.has_pcm_voice()) {
    pcm_voice_ = new ::smaf::VM35PCMVoice(*from.pcm_voice_);
  } else {
    pcm_voice_ = NULL;
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&voice_type_) -
    reinterpret_cast<char*>(&version_)) + sizeof(voice_type_));
  // @@protoc_insertion_point(copy_constructor:smaf.VM35VoicePC)
}

void VM35VoicePC::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&fm_voice_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&voice_type_) -
      reinterpret_cast<char*>(&fm_voice_)) + sizeof(voice_type_));
  _cached_size_ = 0;
}

VM35VoicePC::~VM35VoicePC() {
  // @@protoc_insertion_point(destructor:smaf.VM35VoicePC)
  SharedDtor();
}

void VM35VoicePC::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete fm_voice_;
  if (this != internal_default_instance()) delete pcm_voice_;
}

void VM35VoicePC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VM35VoicePC::descriptor() {
  ::protobuf_smaf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_smaf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VM35VoicePC& VM35VoicePC::default_instance() {
  ::protobuf_smaf_2eproto::InitDefaultsVM35VoicePC();
  return *internal_default_instance();
}

VM35VoicePC* VM35VoicePC::New(::google::protobuf::Arena* arena) const {
  VM35VoicePC* n = new VM35VoicePC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VM35VoicePC::Clear() {
// @@protoc_insertion_point(message_clear_start:smaf.VM35VoicePC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && fm_voice_ != NULL) {
    delete fm_voice_;
  }
  fm_voice_ = NULL;
  if (GetArenaNoVirtual() == NULL && pcm_voice_ != NULL) {
    delete pcm_voice_;
  }
  pcm_voice_ = NULL;
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&voice_type_) -
      reinterpret_cast<char*>(&version_)) + sizeof(voice_type_));
  _internal_metadata_.Clear();
}

bool VM35VoicePC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:smaf.VM35VoicePC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .smaf.VM35FMVoiceVersion version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_version(static_cast< ::smaf::VM35FMVoiceVersion >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "smaf.VM35VoicePC.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bank_msb = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bank_msb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bank_lsb = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bank_lsb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pc = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 drum_note = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &drum_note_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .smaf.VoiceType voice_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_voice_type(static_cast< ::smaf::VoiceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .smaf.VM35FMVoice fm_voice = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fm_voice()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .smaf.VM35PCMVoice pcm_voice = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pcm_voice()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:smaf.VM35VoicePC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:smaf.VM35VoicePC)
  return false;
#undef DO_
}

void VM35VoicePC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:smaf.VM35VoicePC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .smaf.VM35FMVoiceVersion version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->version(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "smaf.VM35VoicePC.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // uint32 bank_msb = 3;
  if (this->bank_msb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->bank_msb(), output);
  }

  // uint32 bank_lsb = 4;
  if (this->bank_lsb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->bank_lsb(), output);
  }

  // uint32 pc = 5;
  if (this->pc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pc(), output);
  }

  // uint32 drum_note = 6;
  if (this->drum_note() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->drum_note(), output);
  }

  // .smaf.VoiceType voice_type = 7;
  if (this->voice_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->voice_type(), output);
  }

  // .smaf.VM35FMVoice fm_voice = 8;
  if (this->has_fm_voice()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->fm_voice_, output);
  }

  // .smaf.VM35PCMVoice pcm_voice = 9;
  if (this->has_pcm_voice()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->pcm_voice_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:smaf.VM35VoicePC)
}

::google::protobuf::uint8* VM35VoicePC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:smaf.VM35VoicePC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .smaf.VM35FMVoiceVersion version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->version(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "smaf.VM35VoicePC.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // uint32 bank_msb = 3;
  if (this->bank_msb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->bank_msb(), target);
  }

  // uint32 bank_lsb = 4;
  if (this->bank_lsb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->bank_lsb(), target);
  }

  // uint32 pc = 5;
  if (this->pc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pc(), target);
  }

  // uint32 drum_note = 6;
  if (this->drum_note() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->drum_note(), target);
  }

  // .smaf.VoiceType voice_type = 7;
  if (this->voice_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->voice_type(), target);
  }

  // .smaf.VM35FMVoice fm_voice = 8;
  if (this->has_fm_voice()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->fm_voice_, deterministic, target);
  }

  // .smaf.VM35PCMVoice pcm_voice = 9;
  if (this->has_pcm_voice()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->pcm_voice_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:smaf.VM35VoicePC)
  return target;
}

size_t VM35VoicePC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:smaf.VM35VoicePC)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .smaf.VM35FMVoice fm_voice = 8;
  if (this->has_fm_voice()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->fm_voice_);
  }

  // .smaf.VM35PCMVoice pcm_voice = 9;
  if (this->has_pcm_voice()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pcm_voice_);
  }

  // .smaf.VM35FMVoiceVersion version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->version());
  }

  // uint32 bank_msb = 3;
  if (this->bank_msb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bank_msb());
  }

  // uint32 bank_lsb = 4;
  if (this->bank_lsb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bank_lsb());
  }

  // uint32 pc = 5;
  if (this->pc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pc());
  }

  // uint32 drum_note = 6;
  if (this->drum_note() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->drum_note());
  }

  // .smaf.VoiceType voice_type = 7;
  if (this->voice_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->voice_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VM35VoicePC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:smaf.VM35VoicePC)
  GOOGLE_DCHECK_NE(&from, this);
  const VM35VoicePC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VM35VoicePC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:smaf.VM35VoicePC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:smaf.VM35VoicePC)
    MergeFrom(*source);
  }
}

void VM35VoicePC::MergeFrom(const VM35VoicePC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:smaf.VM35VoicePC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_fm_voice()) {
    mutable_fm_voice()->::smaf::VM35FMVoice::MergeFrom(from.fm_voice());
  }
  if (from.has_pcm_voice()) {
    mutable_pcm_voice()->::smaf::VM35PCMVoice::MergeFrom(from.pcm_voice());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.bank_msb() != 0) {
    set_bank_msb(from.bank_msb());
  }
  if (from.bank_lsb() != 0) {
    set_bank_lsb(from.bank_lsb());
  }
  if (from.pc() != 0) {
    set_pc(from.pc());
  }
  if (from.drum_note() != 0) {
    set_drum_note(from.drum_note());
  }
  if (from.voice_type() != 0) {
    set_voice_type(from.voice_type());
  }
}

void VM35VoicePC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:smaf.VM35VoicePC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VM35VoicePC::CopyFrom(const VM35VoicePC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:smaf.VM35VoicePC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VM35VoicePC::IsInitialized() const {
  return true;
}

void VM35VoicePC::Swap(VM35VoicePC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VM35VoicePC::InternalSwap(VM35VoicePC* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(fm_voice_, other->fm_voice_);
  swap(pcm_voice_, other->pcm_voice_);
  swap(version_, other->version_);
  swap(bank_msb_, other->bank_msb_);
  swap(bank_lsb_, other->bank_lsb_);
  swap(pc_, other->pc_);
  swap(drum_note_, other->drum_note_);
  swap(voice_type_, other->voice_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VM35VoicePC::GetMetadata() const {
  protobuf_smaf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_smaf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VM35FMVoice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VM35FMVoice::kDrumKeyFieldNumber;
const int VM35FMVoice::kPanpotFieldNumber;
const int VM35FMVoice::kBoFieldNumber;
const int VM35FMVoice::kLfoFieldNumber;
const int VM35FMVoice::kPeFieldNumber;
const int VM35FMVoice::kAlgFieldNumber;
const int VM35FMVoice::kOperatorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VM35FMVoice::VM35FMVoice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_smaf_2eproto::InitDefaultsVM35FMVoice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:smaf.VM35FMVoice)
}
VM35FMVoice::VM35FMVoice(const VM35FMVoice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      operators_(from.operators_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&drum_key_, &from.drum_key_,
    static_cast<size_t>(reinterpret_cast<char*>(&alg_) -
    reinterpret_cast<char*>(&drum_key_)) + sizeof(alg_));
  // @@protoc_insertion_point(copy_constructor:smaf.VM35FMVoice)
}

void VM35FMVoice::SharedCtor() {
  ::memset(&drum_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&alg_) -
      reinterpret_cast<char*>(&drum_key_)) + sizeof(alg_));
  _cached_size_ = 0;
}

VM35FMVoice::~VM35FMVoice() {
  // @@protoc_insertion_point(destructor:smaf.VM35FMVoice)
  SharedDtor();
}

void VM35FMVoice::SharedDtor() {
}

void VM35FMVoice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VM35FMVoice::descriptor() {
  ::protobuf_smaf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_smaf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VM35FMVoice& VM35FMVoice::default_instance() {
  ::protobuf_smaf_2eproto::InitDefaultsVM35FMVoice();
  return *internal_default_instance();
}

VM35FMVoice* VM35FMVoice::New(::google::protobuf::Arena* arena) const {
  VM35FMVoice* n = new VM35FMVoice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VM35FMVoice::Clear() {
// @@protoc_insertion_point(message_clear_start:smaf.VM35FMVoice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operators_.Clear();
  ::memset(&drum_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&alg_) -
      reinterpret_cast<char*>(&drum_key_)) + sizeof(alg_));
  _internal_metadata_.Clear();
}

bool VM35FMVoice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:smaf.VM35FMVoice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 drum_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &drum_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 panpot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &panpot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 lfo = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lfo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool pe = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 alg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &alg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .smaf.VM35FMOperator operators = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_operators()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:smaf.VM35FMVoice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:smaf.VM35FMVoice)
  return false;
#undef DO_
}

void VM35FMVoice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:smaf.VM35FMVoice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 drum_key = 1;
  if (this->drum_key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->drum_key(), output);
  }

  // uint32 panpot = 2;
  if (this->panpot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->panpot(), output);
  }

  // uint32 bo = 3;
  if (this->bo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->bo(), output);
  }

  // uint32 lfo = 4;
  if (this->lfo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->lfo(), output);
  }

  // bool pe = 5;
  if (this->pe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->pe(), output);
  }

  // uint32 alg = 6;
  if (this->alg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->alg(), output);
  }

  // repeated .smaf.VM35FMOperator operators = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->operators_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->operators(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:smaf.VM35FMVoice)
}

::google::protobuf::uint8* VM35FMVoice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:smaf.VM35FMVoice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 drum_key = 1;
  if (this->drum_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->drum_key(), target);
  }

  // uint32 panpot = 2;
  if (this->panpot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->panpot(), target);
  }

  // uint32 bo = 3;
  if (this->bo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->bo(), target);
  }

  // uint32 lfo = 4;
  if (this->lfo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->lfo(), target);
  }

  // bool pe = 5;
  if (this->pe() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->pe(), target);
  }

  // uint32 alg = 6;
  if (this->alg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->alg(), target);
  }

  // repeated .smaf.VM35FMOperator operators = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->operators_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->operators(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:smaf.VM35FMVoice)
  return target;
}

size_t VM35FMVoice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:smaf.VM35FMVoice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .smaf.VM35FMOperator operators = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->operators_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->operators(static_cast<int>(i)));
    }
  }

  // uint32 drum_key = 1;
  if (this->drum_key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->drum_key());
  }

  // uint32 panpot = 2;
  if (this->panpot() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->panpot());
  }

  // uint32 bo = 3;
  if (this->bo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bo());
  }

  // uint32 lfo = 4;
  if (this->lfo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lfo());
  }

  // bool pe = 5;
  if (this->pe() != 0) {
    total_size += 1 + 1;
  }

  // uint32 alg = 6;
  if (this->alg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->alg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VM35FMVoice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:smaf.VM35FMVoice)
  GOOGLE_DCHECK_NE(&from, this);
  const VM35FMVoice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VM35FMVoice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:smaf.VM35FMVoice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:smaf.VM35FMVoice)
    MergeFrom(*source);
  }
}

void VM35FMVoice::MergeFrom(const VM35FMVoice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:smaf.VM35FMVoice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  operators_.MergeFrom(from.operators_);
  if (from.drum_key() != 0) {
    set_drum_key(from.drum_key());
  }
  if (from.panpot() != 0) {
    set_panpot(from.panpot());
  }
  if (from.bo() != 0) {
    set_bo(from.bo());
  }
  if (from.lfo() != 0) {
    set_lfo(from.lfo());
  }
  if (from.pe() != 0) {
    set_pe(from.pe());
  }
  if (from.alg() != 0) {
    set_alg(from.alg());
  }
}

void VM35FMVoice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:smaf.VM35FMVoice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VM35FMVoice::CopyFrom(const VM35FMVoice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:smaf.VM35FMVoice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VM35FMVoice::IsInitialized() const {
  return true;
}

void VM35FMVoice::Swap(VM35FMVoice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VM35FMVoice::InternalSwap(VM35FMVoice* other) {
  using std::swap;
  operators_.InternalSwap(&other->operators_);
  swap(drum_key_, other->drum_key_);
  swap(panpot_, other->panpot_);
  swap(bo_, other->bo_);
  swap(lfo_, other->lfo_);
  swap(pe_, other->pe_);
  swap(alg_, other->alg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VM35FMVoice::GetMetadata() const {
  protobuf_smaf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_smaf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VM35FMOperator::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VM35FMOperator::kMultiFieldNumber;
const int VM35FMOperator::kDtFieldNumber;
const int VM35FMOperator::kArFieldNumber;
const int VM35FMOperator::kDrFieldNumber;
const int VM35FMOperator::kSrFieldNumber;
const int VM35FMOperator::kRrFieldNumber;
const int VM35FMOperator::kSlFieldNumber;
const int VM35FMOperator::kTlFieldNumber;
const int VM35FMOperator::kKslFieldNumber;
const int VM35FMOperator::kDamFieldNumber;
const int VM35FMOperator::kDvbFieldNumber;
const int VM35FMOperator::kFbFieldNumber;
const int VM35FMOperator::kWsFieldNumber;
const int VM35FMOperator::kXofFieldNumber;
const int VM35FMOperator::kSusFieldNumber;
const int VM35FMOperator::kKsrFieldNumber;
const int VM35FMOperator::kEamFieldNumber;
const int VM35FMOperator::kEvbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VM35FMOperator::VM35FMOperator()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_smaf_2eproto::InitDefaultsVM35FMOperator();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:smaf.VM35FMOperator)
}
VM35FMOperator::VM35FMOperator(const VM35FMOperator& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&multi_, &from.multi_,
    static_cast<size_t>(reinterpret_cast<char*>(&evb_) -
    reinterpret_cast<char*>(&multi_)) + sizeof(evb_));
  // @@protoc_insertion_point(copy_constructor:smaf.VM35FMOperator)
}

void VM35FMOperator::SharedCtor() {
  ::memset(&multi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&evb_) -
      reinterpret_cast<char*>(&multi_)) + sizeof(evb_));
  _cached_size_ = 0;
}

VM35FMOperator::~VM35FMOperator() {
  // @@protoc_insertion_point(destructor:smaf.VM35FMOperator)
  SharedDtor();
}

void VM35FMOperator::SharedDtor() {
}

void VM35FMOperator::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VM35FMOperator::descriptor() {
  ::protobuf_smaf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_smaf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VM35FMOperator& VM35FMOperator::default_instance() {
  ::protobuf_smaf_2eproto::InitDefaultsVM35FMOperator();
  return *internal_default_instance();
}

VM35FMOperator* VM35FMOperator::New(::google::protobuf::Arena* arena) const {
  VM35FMOperator* n = new VM35FMOperator;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VM35FMOperator::Clear() {
// @@protoc_insertion_point(message_clear_start:smaf.VM35FMOperator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&multi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&evb_) -
      reinterpret_cast<char*>(&multi_)) + sizeof(evb_));
  _internal_metadata_.Clear();
}

bool VM35FMOperator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:smaf.VM35FMOperator)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 multi = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &multi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ar = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sr = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rr = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sl = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tl = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ksl = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ksl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dam = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dvb = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dvb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 fb = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ws = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ws_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xof = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool sus = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ksr = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ksr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool eam = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &eam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool evb = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &evb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:smaf.VM35FMOperator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:smaf.VM35FMOperator)
  return false;
#undef DO_
}

void VM35FMOperator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:smaf.VM35FMOperator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 multi = 1;
  if (this->multi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->multi(), output);
  }

  // uint32 dt = 2;
  if (this->dt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dt(), output);
  }

  // uint32 ar = 3;
  if (this->ar() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ar(), output);
  }

  // uint32 dr = 4;
  if (this->dr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->dr(), output);
  }

  // uint32 sr = 5;
  if (this->sr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->sr(), output);
  }

  // uint32 rr = 6;
  if (this->rr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->rr(), output);
  }

  // uint32 sl = 7;
  if (this->sl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->sl(), output);
  }

  // uint32 tl = 8;
  if (this->tl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->tl(), output);
  }

  // uint32 ksl = 9;
  if (this->ksl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->ksl(), output);
  }

  // uint32 dam = 10;
  if (this->dam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->dam(), output);
  }

  // uint32 dvb = 11;
  if (this->dvb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->dvb(), output);
  }

  // uint32 fb = 12;
  if (this->fb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->fb(), output);
  }

  // uint32 ws = 13;
  if (this->ws() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->ws(), output);
  }

  // bool xof = 14;
  if (this->xof() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->xof(), output);
  }

  // bool sus = 15;
  if (this->sus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->sus(), output);
  }

  // bool ksr = 16;
  if (this->ksr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->ksr(), output);
  }

  // bool eam = 17;
  if (this->eam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->eam(), output);
  }

  // bool evb = 18;
  if (this->evb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->evb(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:smaf.VM35FMOperator)
}

::google::protobuf::uint8* VM35FMOperator::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:smaf.VM35FMOperator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 multi = 1;
  if (this->multi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->multi(), target);
  }

  // uint32 dt = 2;
  if (this->dt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dt(), target);
  }

  // uint32 ar = 3;
  if (this->ar() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ar(), target);
  }

  // uint32 dr = 4;
  if (this->dr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->dr(), target);
  }

  // uint32 sr = 5;
  if (this->sr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->sr(), target);
  }

  // uint32 rr = 6;
  if (this->rr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->rr(), target);
  }

  // uint32 sl = 7;
  if (this->sl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->sl(), target);
  }

  // uint32 tl = 8;
  if (this->tl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->tl(), target);
  }

  // uint32 ksl = 9;
  if (this->ksl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->ksl(), target);
  }

  // uint32 dam = 10;
  if (this->dam() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->dam(), target);
  }

  // uint32 dvb = 11;
  if (this->dvb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->dvb(), target);
  }

  // uint32 fb = 12;
  if (this->fb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->fb(), target);
  }

  // uint32 ws = 13;
  if (this->ws() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->ws(), target);
  }

  // bool xof = 14;
  if (this->xof() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->xof(), target);
  }

  // bool sus = 15;
  if (this->sus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->sus(), target);
  }

  // bool ksr = 16;
  if (this->ksr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->ksr(), target);
  }

  // bool eam = 17;
  if (this->eam() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->eam(), target);
  }

  // bool evb = 18;
  if (this->evb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->evb(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:smaf.VM35FMOperator)
  return target;
}

size_t VM35FMOperator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:smaf.VM35FMOperator)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 multi = 1;
  if (this->multi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->multi());
  }

  // uint32 dt = 2;
  if (this->dt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dt());
  }

  // uint32 ar = 3;
  if (this->ar() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ar());
  }

  // uint32 dr = 4;
  if (this->dr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dr());
  }

  // uint32 sr = 5;
  if (this->sr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sr());
  }

  // uint32 rr = 6;
  if (this->rr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rr());
  }

  // uint32 sl = 7;
  if (this->sl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sl());
  }

  // uint32 tl = 8;
  if (this->tl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tl());
  }

  // uint32 ksl = 9;
  if (this->ksl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ksl());
  }

  // uint32 dam = 10;
  if (this->dam() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dam());
  }

  // uint32 dvb = 11;
  if (this->dvb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dvb());
  }

  // uint32 fb = 12;
  if (this->fb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fb());
  }

  // uint32 ws = 13;
  if (this->ws() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ws());
  }

  // bool xof = 14;
  if (this->xof() != 0) {
    total_size += 1 + 1;
  }

  // bool sus = 15;
  if (this->sus() != 0) {
    total_size += 1 + 1;
  }

  // bool ksr = 16;
  if (this->ksr() != 0) {
    total_size += 2 + 1;
  }

  // bool eam = 17;
  if (this->eam() != 0) {
    total_size += 2 + 1;
  }

  // bool evb = 18;
  if (this->evb() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VM35FMOperator::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:smaf.VM35FMOperator)
  GOOGLE_DCHECK_NE(&from, this);
  const VM35FMOperator* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VM35FMOperator>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:smaf.VM35FMOperator)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:smaf.VM35FMOperator)
    MergeFrom(*source);
  }
}

void VM35FMOperator::MergeFrom(const VM35FMOperator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:smaf.VM35FMOperator)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.multi() != 0) {
    set_multi(from.multi());
  }
  if (from.dt() != 0) {
    set_dt(from.dt());
  }
  if (from.ar() != 0) {
    set_ar(from.ar());
  }
  if (from.dr() != 0) {
    set_dr(from.dr());
  }
  if (from.sr() != 0) {
    set_sr(from.sr());
  }
  if (from.rr() != 0) {
    set_rr(from.rr());
  }
  if (from.sl() != 0) {
    set_sl(from.sl());
  }
  if (from.tl() != 0) {
    set_tl(from.tl());
  }
  if (from.ksl() != 0) {
    set_ksl(from.ksl());
  }
  if (from.dam() != 0) {
    set_dam(from.dam());
  }
  if (from.dvb() != 0) {
    set_dvb(from.dvb());
  }
  if (from.fb() != 0) {
    set_fb(from.fb());
  }
  if (from.ws() != 0) {
    set_ws(from.ws());
  }
  if (from.xof() != 0) {
    set_xof(from.xof());
  }
  if (from.sus() != 0) {
    set_sus(from.sus());
  }
  if (from.ksr() != 0) {
    set_ksr(from.ksr());
  }
  if (from.eam() != 0) {
    set_eam(from.eam());
  }
  if (from.evb() != 0) {
    set_evb(from.evb());
  }
}

void VM35FMOperator::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:smaf.VM35FMOperator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VM35FMOperator::CopyFrom(const VM35FMOperator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:smaf.VM35FMOperator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VM35FMOperator::IsInitialized() const {
  return true;
}

void VM35FMOperator::Swap(VM35FMOperator* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VM35FMOperator::InternalSwap(VM35FMOperator* other) {
  using std::swap;
  swap(multi_, other->multi_);
  swap(dt_, other->dt_);
  swap(ar_, other->ar_);
  swap(dr_, other->dr_);
  swap(sr_, other->sr_);
  swap(rr_, other->rr_);
  swap(sl_, other->sl_);
  swap(tl_, other->tl_);
  swap(ksl_, other->ksl_);
  swap(dam_, other->dam_);
  swap(dvb_, other->dvb_);
  swap(fb_, other->fb_);
  swap(ws_, other->ws_);
  swap(xof_, other->xof_);
  swap(sus_, other->sus_);
  swap(ksr_, other->ksr_);
  swap(eam_, other->eam_);
  swap(evb_, other->evb_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VM35FMOperator::GetMetadata() const {
  protobuf_smaf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_smaf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VM35PCMVoice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VM35PCMVoice::kRawDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VM35PCMVoice::VM35PCMVoice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_smaf_2eproto::InitDefaultsVM35PCMVoice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:smaf.VM35PCMVoice)
}
VM35PCMVoice::VM35PCMVoice(const VM35PCMVoice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  raw_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.raw_data().size() > 0) {
    raw_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raw_data_);
  }
  // @@protoc_insertion_point(copy_constructor:smaf.VM35PCMVoice)
}

void VM35PCMVoice::SharedCtor() {
  raw_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

VM35PCMVoice::~VM35PCMVoice() {
  // @@protoc_insertion_point(destructor:smaf.VM35PCMVoice)
  SharedDtor();
}

void VM35PCMVoice::SharedDtor() {
  raw_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VM35PCMVoice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VM35PCMVoice::descriptor() {
  ::protobuf_smaf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_smaf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VM35PCMVoice& VM35PCMVoice::default_instance() {
  ::protobuf_smaf_2eproto::InitDefaultsVM35PCMVoice();
  return *internal_default_instance();
}

VM35PCMVoice* VM35PCMVoice::New(::google::protobuf::Arena* arena) const {
  VM35PCMVoice* n = new VM35PCMVoice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VM35PCMVoice::Clear() {
// @@protoc_insertion_point(message_clear_start:smaf.VM35PCMVoice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  raw_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool VM35PCMVoice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:smaf.VM35PCMVoice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes raw_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_raw_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:smaf.VM35PCMVoice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:smaf.VM35PCMVoice)
  return false;
#undef DO_
}

void VM35PCMVoice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:smaf.VM35PCMVoice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes raw_data = 1;
  if (this->raw_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->raw_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:smaf.VM35PCMVoice)
}

::google::protobuf::uint8* VM35PCMVoice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:smaf.VM35PCMVoice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes raw_data = 1;
  if (this->raw_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->raw_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:smaf.VM35PCMVoice)
  return target;
}

size_t VM35PCMVoice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:smaf.VM35PCMVoice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes raw_data = 1;
  if (this->raw_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->raw_data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VM35PCMVoice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:smaf.VM35PCMVoice)
  GOOGLE_DCHECK_NE(&from, this);
  const VM35PCMVoice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VM35PCMVoice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:smaf.VM35PCMVoice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:smaf.VM35PCMVoice)
    MergeFrom(*source);
  }
}

void VM35PCMVoice::MergeFrom(const VM35PCMVoice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:smaf.VM35PCMVoice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.raw_data().size() > 0) {

    raw_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raw_data_);
  }
}

void VM35PCMVoice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:smaf.VM35PCMVoice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VM35PCMVoice::CopyFrom(const VM35PCMVoice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:smaf.VM35PCMVoice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VM35PCMVoice::IsInitialized() const {
  return true;
}

void VM35PCMVoice::Swap(VM35PCMVoice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VM35PCMVoice::InternalSwap(VM35PCMVoice* other) {
  using std::swap;
  raw_data_.Swap(&other->raw_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VM35PCMVoice::GetMetadata() const {
  protobuf_smaf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_smaf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace smaf

// @@protoc_insertion_point(global_scope)
