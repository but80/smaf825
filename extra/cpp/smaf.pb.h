// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: smaf.proto

#ifndef PROTOBUF_smaf_2eproto__INCLUDED
#define PROTOBUF_smaf_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_smaf_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsVM5VoiceLibImpl();
void InitDefaultsVM5VoiceLib();
void InitDefaultsVM35VoicePCImpl();
void InitDefaultsVM35VoicePC();
void InitDefaultsVM35FMVoiceImpl();
void InitDefaultsVM35FMVoice();
void InitDefaultsVM35FMOperatorImpl();
void InitDefaultsVM35FMOperator();
void InitDefaultsVM35PCMVoiceImpl();
void InitDefaultsVM35PCMVoice();
inline void InitDefaults() {
  InitDefaultsVM5VoiceLib();
  InitDefaultsVM35VoicePC();
  InitDefaultsVM35FMVoice();
  InitDefaultsVM35FMOperator();
  InitDefaultsVM35PCMVoice();
}
}  // namespace protobuf_smaf_2eproto
namespace smaf {
class VM35FMOperator;
class VM35FMOperatorDefaultTypeInternal;
extern VM35FMOperatorDefaultTypeInternal _VM35FMOperator_default_instance_;
class VM35FMVoice;
class VM35FMVoiceDefaultTypeInternal;
extern VM35FMVoiceDefaultTypeInternal _VM35FMVoice_default_instance_;
class VM35PCMVoice;
class VM35PCMVoiceDefaultTypeInternal;
extern VM35PCMVoiceDefaultTypeInternal _VM35PCMVoice_default_instance_;
class VM35VoicePC;
class VM35VoicePCDefaultTypeInternal;
extern VM35VoicePCDefaultTypeInternal _VM35VoicePC_default_instance_;
class VM5VoiceLib;
class VM5VoiceLibDefaultTypeInternal;
extern VM5VoiceLibDefaultTypeInternal _VM5VoiceLib_default_instance_;
}  // namespace smaf
namespace smaf {

enum VM35FMVoiceVersion {
  VM35FMVoiceVersion_MIN = 0,
  VM3LIB = 0,
  VM3EXCLUSIVE = 1,
  VM5 = 2,
  VM35FMVoiceVersion_MAX = 2,
  VM35FMVoiceVersion_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VM35FMVoiceVersion_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VM35FMVoiceVersion_IsValid(int value);
const VM35FMVoiceVersion VM35FMVoiceVersion_MIN = VM35FMVoiceVersion_MIN;
const VM35FMVoiceVersion VM35FMVoiceVersion_MAX = VM5;
const int VM35FMVoiceVersion_ARRAYSIZE = VM35FMVoiceVersion_MAX + 1;

const ::google::protobuf::EnumDescriptor* VM35FMVoiceVersion_descriptor();
inline const ::std::string& VM35FMVoiceVersion_Name(VM35FMVoiceVersion value) {
  return ::google::protobuf::internal::NameOfEnum(
    VM35FMVoiceVersion_descriptor(), value);
}
inline bool VM35FMVoiceVersion_Parse(
    const ::std::string& name, VM35FMVoiceVersion* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VM35FMVoiceVersion>(
    VM35FMVoiceVersion_descriptor(), name, value);
}
enum VoiceType {
  VoiceType_MIN = 0,
  FM = 0,
  PCM = 1,
  AL = 2,
  VoiceType_MAX = 2,
  VoiceType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VoiceType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VoiceType_IsValid(int value);
const VoiceType VoiceType_MIN = VoiceType_MIN;
const VoiceType VoiceType_MAX = AL;
const int VoiceType_ARRAYSIZE = VoiceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* VoiceType_descriptor();
inline const ::std::string& VoiceType_Name(VoiceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    VoiceType_descriptor(), value);
}
inline bool VoiceType_Parse(
    const ::std::string& name, VoiceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VoiceType>(
    VoiceType_descriptor(), name, value);
}
// ===================================================================

class VM5VoiceLib : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smaf.VM5VoiceLib) */ {
 public:
  VM5VoiceLib();
  virtual ~VM5VoiceLib();

  VM5VoiceLib(const VM5VoiceLib& from);

  inline VM5VoiceLib& operator=(const VM5VoiceLib& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VM5VoiceLib(VM5VoiceLib&& from) noexcept
    : VM5VoiceLib() {
    *this = ::std::move(from);
  }

  inline VM5VoiceLib& operator=(VM5VoiceLib&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VM5VoiceLib& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VM5VoiceLib* internal_default_instance() {
    return reinterpret_cast<const VM5VoiceLib*>(
               &_VM5VoiceLib_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(VM5VoiceLib* other);
  friend void swap(VM5VoiceLib& a, VM5VoiceLib& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VM5VoiceLib* New() const PROTOBUF_FINAL { return New(NULL); }

  VM5VoiceLib* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VM5VoiceLib& from);
  void MergeFrom(const VM5VoiceLib& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VM5VoiceLib* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .smaf.VM35VoicePC programs = 1;
  int programs_size() const;
  void clear_programs();
  static const int kProgramsFieldNumber = 1;
  const ::smaf::VM35VoicePC& programs(int index) const;
  ::smaf::VM35VoicePC* mutable_programs(int index);
  ::smaf::VM35VoicePC* add_programs();
  ::google::protobuf::RepeatedPtrField< ::smaf::VM35VoicePC >*
      mutable_programs();
  const ::google::protobuf::RepeatedPtrField< ::smaf::VM35VoicePC >&
      programs() const;

  // @@protoc_insertion_point(class_scope:smaf.VM5VoiceLib)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::smaf::VM35VoicePC > programs_;
  mutable int _cached_size_;
  friend struct ::protobuf_smaf_2eproto::TableStruct;
  friend void ::protobuf_smaf_2eproto::InitDefaultsVM5VoiceLibImpl();
};
// -------------------------------------------------------------------

class VM35VoicePC : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smaf.VM35VoicePC) */ {
 public:
  VM35VoicePC();
  virtual ~VM35VoicePC();

  VM35VoicePC(const VM35VoicePC& from);

  inline VM35VoicePC& operator=(const VM35VoicePC& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VM35VoicePC(VM35VoicePC&& from) noexcept
    : VM35VoicePC() {
    *this = ::std::move(from);
  }

  inline VM35VoicePC& operator=(VM35VoicePC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VM35VoicePC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VM35VoicePC* internal_default_instance() {
    return reinterpret_cast<const VM35VoicePC*>(
               &_VM35VoicePC_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(VM35VoicePC* other);
  friend void swap(VM35VoicePC& a, VM35VoicePC& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VM35VoicePC* New() const PROTOBUF_FINAL { return New(NULL); }

  VM35VoicePC* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VM35VoicePC& from);
  void MergeFrom(const VM35VoicePC& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VM35VoicePC* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .smaf.VM35FMVoice fm_voice = 8;
  bool has_fm_voice() const;
  void clear_fm_voice();
  static const int kFmVoiceFieldNumber = 8;
  const ::smaf::VM35FMVoice& fm_voice() const;
  ::smaf::VM35FMVoice* release_fm_voice();
  ::smaf::VM35FMVoice* mutable_fm_voice();
  void set_allocated_fm_voice(::smaf::VM35FMVoice* fm_voice);

  // .smaf.VM35PCMVoice pcm_voice = 9;
  bool has_pcm_voice() const;
  void clear_pcm_voice();
  static const int kPcmVoiceFieldNumber = 9;
  const ::smaf::VM35PCMVoice& pcm_voice() const;
  ::smaf::VM35PCMVoice* release_pcm_voice();
  ::smaf::VM35PCMVoice* mutable_pcm_voice();
  void set_allocated_pcm_voice(::smaf::VM35PCMVoice* pcm_voice);

  // .smaf.VM35FMVoiceVersion version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::smaf::VM35FMVoiceVersion version() const;
  void set_version(::smaf::VM35FMVoiceVersion value);

  // uint32 bank_msb = 3;
  void clear_bank_msb();
  static const int kBankMsbFieldNumber = 3;
  ::google::protobuf::uint32 bank_msb() const;
  void set_bank_msb(::google::protobuf::uint32 value);

  // uint32 bank_lsb = 4;
  void clear_bank_lsb();
  static const int kBankLsbFieldNumber = 4;
  ::google::protobuf::uint32 bank_lsb() const;
  void set_bank_lsb(::google::protobuf::uint32 value);

  // uint32 pc = 5;
  void clear_pc();
  static const int kPcFieldNumber = 5;
  ::google::protobuf::uint32 pc() const;
  void set_pc(::google::protobuf::uint32 value);

  // uint32 drum_note = 6;
  void clear_drum_note();
  static const int kDrumNoteFieldNumber = 6;
  ::google::protobuf::uint32 drum_note() const;
  void set_drum_note(::google::protobuf::uint32 value);

  // .smaf.VoiceType voice_type = 7;
  void clear_voice_type();
  static const int kVoiceTypeFieldNumber = 7;
  ::smaf::VoiceType voice_type() const;
  void set_voice_type(::smaf::VoiceType value);

  // @@protoc_insertion_point(class_scope:smaf.VM35VoicePC)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::smaf::VM35FMVoice* fm_voice_;
  ::smaf::VM35PCMVoice* pcm_voice_;
  int version_;
  ::google::protobuf::uint32 bank_msb_;
  ::google::protobuf::uint32 bank_lsb_;
  ::google::protobuf::uint32 pc_;
  ::google::protobuf::uint32 drum_note_;
  int voice_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_smaf_2eproto::TableStruct;
  friend void ::protobuf_smaf_2eproto::InitDefaultsVM35VoicePCImpl();
};
// -------------------------------------------------------------------

class VM35FMVoice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smaf.VM35FMVoice) */ {
 public:
  VM35FMVoice();
  virtual ~VM35FMVoice();

  VM35FMVoice(const VM35FMVoice& from);

  inline VM35FMVoice& operator=(const VM35FMVoice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VM35FMVoice(VM35FMVoice&& from) noexcept
    : VM35FMVoice() {
    *this = ::std::move(from);
  }

  inline VM35FMVoice& operator=(VM35FMVoice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VM35FMVoice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VM35FMVoice* internal_default_instance() {
    return reinterpret_cast<const VM35FMVoice*>(
               &_VM35FMVoice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(VM35FMVoice* other);
  friend void swap(VM35FMVoice& a, VM35FMVoice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VM35FMVoice* New() const PROTOBUF_FINAL { return New(NULL); }

  VM35FMVoice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VM35FMVoice& from);
  void MergeFrom(const VM35FMVoice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VM35FMVoice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .smaf.VM35FMOperator operators = 7;
  int operators_size() const;
  void clear_operators();
  static const int kOperatorsFieldNumber = 7;
  const ::smaf::VM35FMOperator& operators(int index) const;
  ::smaf::VM35FMOperator* mutable_operators(int index);
  ::smaf::VM35FMOperator* add_operators();
  ::google::protobuf::RepeatedPtrField< ::smaf::VM35FMOperator >*
      mutable_operators();
  const ::google::protobuf::RepeatedPtrField< ::smaf::VM35FMOperator >&
      operators() const;

  // uint32 drum_key = 1;
  void clear_drum_key();
  static const int kDrumKeyFieldNumber = 1;
  ::google::protobuf::uint32 drum_key() const;
  void set_drum_key(::google::protobuf::uint32 value);

  // uint32 panpot = 2;
  void clear_panpot();
  static const int kPanpotFieldNumber = 2;
  ::google::protobuf::uint32 panpot() const;
  void set_panpot(::google::protobuf::uint32 value);

  // uint32 bo = 3;
  void clear_bo();
  static const int kBoFieldNumber = 3;
  ::google::protobuf::uint32 bo() const;
  void set_bo(::google::protobuf::uint32 value);

  // uint32 lfo = 4;
  void clear_lfo();
  static const int kLfoFieldNumber = 4;
  ::google::protobuf::uint32 lfo() const;
  void set_lfo(::google::protobuf::uint32 value);

  // bool pe = 5;
  void clear_pe();
  static const int kPeFieldNumber = 5;
  bool pe() const;
  void set_pe(bool value);

  // uint32 alg = 6;
  void clear_alg();
  static const int kAlgFieldNumber = 6;
  ::google::protobuf::uint32 alg() const;
  void set_alg(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:smaf.VM35FMVoice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::smaf::VM35FMOperator > operators_;
  ::google::protobuf::uint32 drum_key_;
  ::google::protobuf::uint32 panpot_;
  ::google::protobuf::uint32 bo_;
  ::google::protobuf::uint32 lfo_;
  bool pe_;
  ::google::protobuf::uint32 alg_;
  mutable int _cached_size_;
  friend struct ::protobuf_smaf_2eproto::TableStruct;
  friend void ::protobuf_smaf_2eproto::InitDefaultsVM35FMVoiceImpl();
};
// -------------------------------------------------------------------

class VM35FMOperator : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smaf.VM35FMOperator) */ {
 public:
  VM35FMOperator();
  virtual ~VM35FMOperator();

  VM35FMOperator(const VM35FMOperator& from);

  inline VM35FMOperator& operator=(const VM35FMOperator& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VM35FMOperator(VM35FMOperator&& from) noexcept
    : VM35FMOperator() {
    *this = ::std::move(from);
  }

  inline VM35FMOperator& operator=(VM35FMOperator&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VM35FMOperator& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VM35FMOperator* internal_default_instance() {
    return reinterpret_cast<const VM35FMOperator*>(
               &_VM35FMOperator_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(VM35FMOperator* other);
  friend void swap(VM35FMOperator& a, VM35FMOperator& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VM35FMOperator* New() const PROTOBUF_FINAL { return New(NULL); }

  VM35FMOperator* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VM35FMOperator& from);
  void MergeFrom(const VM35FMOperator& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VM35FMOperator* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 multi = 1;
  void clear_multi();
  static const int kMultiFieldNumber = 1;
  ::google::protobuf::uint32 multi() const;
  void set_multi(::google::protobuf::uint32 value);

  // uint32 dt = 2;
  void clear_dt();
  static const int kDtFieldNumber = 2;
  ::google::protobuf::uint32 dt() const;
  void set_dt(::google::protobuf::uint32 value);

  // uint32 ar = 3;
  void clear_ar();
  static const int kArFieldNumber = 3;
  ::google::protobuf::uint32 ar() const;
  void set_ar(::google::protobuf::uint32 value);

  // uint32 dr = 4;
  void clear_dr();
  static const int kDrFieldNumber = 4;
  ::google::protobuf::uint32 dr() const;
  void set_dr(::google::protobuf::uint32 value);

  // uint32 sr = 5;
  void clear_sr();
  static const int kSrFieldNumber = 5;
  ::google::protobuf::uint32 sr() const;
  void set_sr(::google::protobuf::uint32 value);

  // uint32 rr = 6;
  void clear_rr();
  static const int kRrFieldNumber = 6;
  ::google::protobuf::uint32 rr() const;
  void set_rr(::google::protobuf::uint32 value);

  // uint32 sl = 7;
  void clear_sl();
  static const int kSlFieldNumber = 7;
  ::google::protobuf::uint32 sl() const;
  void set_sl(::google::protobuf::uint32 value);

  // uint32 tl = 8;
  void clear_tl();
  static const int kTlFieldNumber = 8;
  ::google::protobuf::uint32 tl() const;
  void set_tl(::google::protobuf::uint32 value);

  // uint32 ksl = 9;
  void clear_ksl();
  static const int kKslFieldNumber = 9;
  ::google::protobuf::uint32 ksl() const;
  void set_ksl(::google::protobuf::uint32 value);

  // uint32 dam = 10;
  void clear_dam();
  static const int kDamFieldNumber = 10;
  ::google::protobuf::uint32 dam() const;
  void set_dam(::google::protobuf::uint32 value);

  // uint32 dvb = 11;
  void clear_dvb();
  static const int kDvbFieldNumber = 11;
  ::google::protobuf::uint32 dvb() const;
  void set_dvb(::google::protobuf::uint32 value);

  // uint32 fb = 12;
  void clear_fb();
  static const int kFbFieldNumber = 12;
  ::google::protobuf::uint32 fb() const;
  void set_fb(::google::protobuf::uint32 value);

  // uint32 ws = 13;
  void clear_ws();
  static const int kWsFieldNumber = 13;
  ::google::protobuf::uint32 ws() const;
  void set_ws(::google::protobuf::uint32 value);

  // bool xof = 14;
  void clear_xof();
  static const int kXofFieldNumber = 14;
  bool xof() const;
  void set_xof(bool value);

  // bool sus = 15;
  void clear_sus();
  static const int kSusFieldNumber = 15;
  bool sus() const;
  void set_sus(bool value);

  // bool ksr = 16;
  void clear_ksr();
  static const int kKsrFieldNumber = 16;
  bool ksr() const;
  void set_ksr(bool value);

  // bool eam = 17;
  void clear_eam();
  static const int kEamFieldNumber = 17;
  bool eam() const;
  void set_eam(bool value);

  // bool evb = 18;
  void clear_evb();
  static const int kEvbFieldNumber = 18;
  bool evb() const;
  void set_evb(bool value);

  // @@protoc_insertion_point(class_scope:smaf.VM35FMOperator)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 multi_;
  ::google::protobuf::uint32 dt_;
  ::google::protobuf::uint32 ar_;
  ::google::protobuf::uint32 dr_;
  ::google::protobuf::uint32 sr_;
  ::google::protobuf::uint32 rr_;
  ::google::protobuf::uint32 sl_;
  ::google::protobuf::uint32 tl_;
  ::google::protobuf::uint32 ksl_;
  ::google::protobuf::uint32 dam_;
  ::google::protobuf::uint32 dvb_;
  ::google::protobuf::uint32 fb_;
  ::google::protobuf::uint32 ws_;
  bool xof_;
  bool sus_;
  bool ksr_;
  bool eam_;
  bool evb_;
  mutable int _cached_size_;
  friend struct ::protobuf_smaf_2eproto::TableStruct;
  friend void ::protobuf_smaf_2eproto::InitDefaultsVM35FMOperatorImpl();
};
// -------------------------------------------------------------------

class VM35PCMVoice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smaf.VM35PCMVoice) */ {
 public:
  VM35PCMVoice();
  virtual ~VM35PCMVoice();

  VM35PCMVoice(const VM35PCMVoice& from);

  inline VM35PCMVoice& operator=(const VM35PCMVoice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VM35PCMVoice(VM35PCMVoice&& from) noexcept
    : VM35PCMVoice() {
    *this = ::std::move(from);
  }

  inline VM35PCMVoice& operator=(VM35PCMVoice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VM35PCMVoice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VM35PCMVoice* internal_default_instance() {
    return reinterpret_cast<const VM35PCMVoice*>(
               &_VM35PCMVoice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(VM35PCMVoice* other);
  friend void swap(VM35PCMVoice& a, VM35PCMVoice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VM35PCMVoice* New() const PROTOBUF_FINAL { return New(NULL); }

  VM35PCMVoice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VM35PCMVoice& from);
  void MergeFrom(const VM35PCMVoice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VM35PCMVoice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes raw_data = 1;
  void clear_raw_data();
  static const int kRawDataFieldNumber = 1;
  const ::std::string& raw_data() const;
  void set_raw_data(const ::std::string& value);
  #if LANG_CXX11
  void set_raw_data(::std::string&& value);
  #endif
  void set_raw_data(const char* value);
  void set_raw_data(const void* value, size_t size);
  ::std::string* mutable_raw_data();
  ::std::string* release_raw_data();
  void set_allocated_raw_data(::std::string* raw_data);

  // @@protoc_insertion_point(class_scope:smaf.VM35PCMVoice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr raw_data_;
  mutable int _cached_size_;
  friend struct ::protobuf_smaf_2eproto::TableStruct;
  friend void ::protobuf_smaf_2eproto::InitDefaultsVM35PCMVoiceImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// VM5VoiceLib

// repeated .smaf.VM35VoicePC programs = 1;
inline int VM5VoiceLib::programs_size() const {
  return programs_.size();
}
inline void VM5VoiceLib::clear_programs() {
  programs_.Clear();
}
inline const ::smaf::VM35VoicePC& VM5VoiceLib::programs(int index) const {
  // @@protoc_insertion_point(field_get:smaf.VM5VoiceLib.programs)
  return programs_.Get(index);
}
inline ::smaf::VM35VoicePC* VM5VoiceLib::mutable_programs(int index) {
  // @@protoc_insertion_point(field_mutable:smaf.VM5VoiceLib.programs)
  return programs_.Mutable(index);
}
inline ::smaf::VM35VoicePC* VM5VoiceLib::add_programs() {
  // @@protoc_insertion_point(field_add:smaf.VM5VoiceLib.programs)
  return programs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::smaf::VM35VoicePC >*
VM5VoiceLib::mutable_programs() {
  // @@protoc_insertion_point(field_mutable_list:smaf.VM5VoiceLib.programs)
  return &programs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::smaf::VM35VoicePC >&
VM5VoiceLib::programs() const {
  // @@protoc_insertion_point(field_list:smaf.VM5VoiceLib.programs)
  return programs_;
}

// -------------------------------------------------------------------

// VM35VoicePC

// .smaf.VM35FMVoiceVersion version = 1;
inline void VM35VoicePC::clear_version() {
  version_ = 0;
}
inline ::smaf::VM35FMVoiceVersion VM35VoicePC::version() const {
  // @@protoc_insertion_point(field_get:smaf.VM35VoicePC.version)
  return static_cast< ::smaf::VM35FMVoiceVersion >(version_);
}
inline void VM35VoicePC::set_version(::smaf::VM35FMVoiceVersion value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35VoicePC.version)
}

// string name = 2;
inline void VM35VoicePC::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VM35VoicePC::name() const {
  // @@protoc_insertion_point(field_get:smaf.VM35VoicePC.name)
  return name_.GetNoArena();
}
inline void VM35VoicePC::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:smaf.VM35VoicePC.name)
}
#if LANG_CXX11
inline void VM35VoicePC::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:smaf.VM35VoicePC.name)
}
#endif
inline void VM35VoicePC::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:smaf.VM35VoicePC.name)
}
inline void VM35VoicePC::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:smaf.VM35VoicePC.name)
}
inline ::std::string* VM35VoicePC::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:smaf.VM35VoicePC.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VM35VoicePC::release_name() {
  // @@protoc_insertion_point(field_release:smaf.VM35VoicePC.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VM35VoicePC::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:smaf.VM35VoicePC.name)
}

// uint32 bank_msb = 3;
inline void VM35VoicePC::clear_bank_msb() {
  bank_msb_ = 0u;
}
inline ::google::protobuf::uint32 VM35VoicePC::bank_msb() const {
  // @@protoc_insertion_point(field_get:smaf.VM35VoicePC.bank_msb)
  return bank_msb_;
}
inline void VM35VoicePC::set_bank_msb(::google::protobuf::uint32 value) {
  
  bank_msb_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35VoicePC.bank_msb)
}

// uint32 bank_lsb = 4;
inline void VM35VoicePC::clear_bank_lsb() {
  bank_lsb_ = 0u;
}
inline ::google::protobuf::uint32 VM35VoicePC::bank_lsb() const {
  // @@protoc_insertion_point(field_get:smaf.VM35VoicePC.bank_lsb)
  return bank_lsb_;
}
inline void VM35VoicePC::set_bank_lsb(::google::protobuf::uint32 value) {
  
  bank_lsb_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35VoicePC.bank_lsb)
}

// uint32 pc = 5;
inline void VM35VoicePC::clear_pc() {
  pc_ = 0u;
}
inline ::google::protobuf::uint32 VM35VoicePC::pc() const {
  // @@protoc_insertion_point(field_get:smaf.VM35VoicePC.pc)
  return pc_;
}
inline void VM35VoicePC::set_pc(::google::protobuf::uint32 value) {
  
  pc_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35VoicePC.pc)
}

// uint32 drum_note = 6;
inline void VM35VoicePC::clear_drum_note() {
  drum_note_ = 0u;
}
inline ::google::protobuf::uint32 VM35VoicePC::drum_note() const {
  // @@protoc_insertion_point(field_get:smaf.VM35VoicePC.drum_note)
  return drum_note_;
}
inline void VM35VoicePC::set_drum_note(::google::protobuf::uint32 value) {
  
  drum_note_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35VoicePC.drum_note)
}

// .smaf.VoiceType voice_type = 7;
inline void VM35VoicePC::clear_voice_type() {
  voice_type_ = 0;
}
inline ::smaf::VoiceType VM35VoicePC::voice_type() const {
  // @@protoc_insertion_point(field_get:smaf.VM35VoicePC.voice_type)
  return static_cast< ::smaf::VoiceType >(voice_type_);
}
inline void VM35VoicePC::set_voice_type(::smaf::VoiceType value) {
  
  voice_type_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35VoicePC.voice_type)
}

// .smaf.VM35FMVoice fm_voice = 8;
inline bool VM35VoicePC::has_fm_voice() const {
  return this != internal_default_instance() && fm_voice_ != NULL;
}
inline void VM35VoicePC::clear_fm_voice() {
  if (GetArenaNoVirtual() == NULL && fm_voice_ != NULL) {
    delete fm_voice_;
  }
  fm_voice_ = NULL;
}
inline const ::smaf::VM35FMVoice& VM35VoicePC::fm_voice() const {
  const ::smaf::VM35FMVoice* p = fm_voice_;
  // @@protoc_insertion_point(field_get:smaf.VM35VoicePC.fm_voice)
  return p != NULL ? *p : *reinterpret_cast<const ::smaf::VM35FMVoice*>(
      &::smaf::_VM35FMVoice_default_instance_);
}
inline ::smaf::VM35FMVoice* VM35VoicePC::release_fm_voice() {
  // @@protoc_insertion_point(field_release:smaf.VM35VoicePC.fm_voice)
  
  ::smaf::VM35FMVoice* temp = fm_voice_;
  fm_voice_ = NULL;
  return temp;
}
inline ::smaf::VM35FMVoice* VM35VoicePC::mutable_fm_voice() {
  
  if (fm_voice_ == NULL) {
    fm_voice_ = new ::smaf::VM35FMVoice;
  }
  // @@protoc_insertion_point(field_mutable:smaf.VM35VoicePC.fm_voice)
  return fm_voice_;
}
inline void VM35VoicePC::set_allocated_fm_voice(::smaf::VM35FMVoice* fm_voice) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete fm_voice_;
  }
  if (fm_voice) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fm_voice = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fm_voice, submessage_arena);
    }
    
  } else {
    
  }
  fm_voice_ = fm_voice;
  // @@protoc_insertion_point(field_set_allocated:smaf.VM35VoicePC.fm_voice)
}

// .smaf.VM35PCMVoice pcm_voice = 9;
inline bool VM35VoicePC::has_pcm_voice() const {
  return this != internal_default_instance() && pcm_voice_ != NULL;
}
inline void VM35VoicePC::clear_pcm_voice() {
  if (GetArenaNoVirtual() == NULL && pcm_voice_ != NULL) {
    delete pcm_voice_;
  }
  pcm_voice_ = NULL;
}
inline const ::smaf::VM35PCMVoice& VM35VoicePC::pcm_voice() const {
  const ::smaf::VM35PCMVoice* p = pcm_voice_;
  // @@protoc_insertion_point(field_get:smaf.VM35VoicePC.pcm_voice)
  return p != NULL ? *p : *reinterpret_cast<const ::smaf::VM35PCMVoice*>(
      &::smaf::_VM35PCMVoice_default_instance_);
}
inline ::smaf::VM35PCMVoice* VM35VoicePC::release_pcm_voice() {
  // @@protoc_insertion_point(field_release:smaf.VM35VoicePC.pcm_voice)
  
  ::smaf::VM35PCMVoice* temp = pcm_voice_;
  pcm_voice_ = NULL;
  return temp;
}
inline ::smaf::VM35PCMVoice* VM35VoicePC::mutable_pcm_voice() {
  
  if (pcm_voice_ == NULL) {
    pcm_voice_ = new ::smaf::VM35PCMVoice;
  }
  // @@protoc_insertion_point(field_mutable:smaf.VM35VoicePC.pcm_voice)
  return pcm_voice_;
}
inline void VM35VoicePC::set_allocated_pcm_voice(::smaf::VM35PCMVoice* pcm_voice) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pcm_voice_;
  }
  if (pcm_voice) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pcm_voice = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pcm_voice, submessage_arena);
    }
    
  } else {
    
  }
  pcm_voice_ = pcm_voice;
  // @@protoc_insertion_point(field_set_allocated:smaf.VM35VoicePC.pcm_voice)
}

// -------------------------------------------------------------------

// VM35FMVoice

// uint32 drum_key = 1;
inline void VM35FMVoice::clear_drum_key() {
  drum_key_ = 0u;
}
inline ::google::protobuf::uint32 VM35FMVoice::drum_key() const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMVoice.drum_key)
  return drum_key_;
}
inline void VM35FMVoice::set_drum_key(::google::protobuf::uint32 value) {
  
  drum_key_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35FMVoice.drum_key)
}

// uint32 panpot = 2;
inline void VM35FMVoice::clear_panpot() {
  panpot_ = 0u;
}
inline ::google::protobuf::uint32 VM35FMVoice::panpot() const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMVoice.panpot)
  return panpot_;
}
inline void VM35FMVoice::set_panpot(::google::protobuf::uint32 value) {
  
  panpot_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35FMVoice.panpot)
}

// uint32 bo = 3;
inline void VM35FMVoice::clear_bo() {
  bo_ = 0u;
}
inline ::google::protobuf::uint32 VM35FMVoice::bo() const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMVoice.bo)
  return bo_;
}
inline void VM35FMVoice::set_bo(::google::protobuf::uint32 value) {
  
  bo_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35FMVoice.bo)
}

// uint32 lfo = 4;
inline void VM35FMVoice::clear_lfo() {
  lfo_ = 0u;
}
inline ::google::protobuf::uint32 VM35FMVoice::lfo() const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMVoice.lfo)
  return lfo_;
}
inline void VM35FMVoice::set_lfo(::google::protobuf::uint32 value) {
  
  lfo_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35FMVoice.lfo)
}

// bool pe = 5;
inline void VM35FMVoice::clear_pe() {
  pe_ = false;
}
inline bool VM35FMVoice::pe() const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMVoice.pe)
  return pe_;
}
inline void VM35FMVoice::set_pe(bool value) {
  
  pe_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35FMVoice.pe)
}

// uint32 alg = 6;
inline void VM35FMVoice::clear_alg() {
  alg_ = 0u;
}
inline ::google::protobuf::uint32 VM35FMVoice::alg() const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMVoice.alg)
  return alg_;
}
inline void VM35FMVoice::set_alg(::google::protobuf::uint32 value) {
  
  alg_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35FMVoice.alg)
}

// repeated .smaf.VM35FMOperator operators = 7;
inline int VM35FMVoice::operators_size() const {
  return operators_.size();
}
inline void VM35FMVoice::clear_operators() {
  operators_.Clear();
}
inline const ::smaf::VM35FMOperator& VM35FMVoice::operators(int index) const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMVoice.operators)
  return operators_.Get(index);
}
inline ::smaf::VM35FMOperator* VM35FMVoice::mutable_operators(int index) {
  // @@protoc_insertion_point(field_mutable:smaf.VM35FMVoice.operators)
  return operators_.Mutable(index);
}
inline ::smaf::VM35FMOperator* VM35FMVoice::add_operators() {
  // @@protoc_insertion_point(field_add:smaf.VM35FMVoice.operators)
  return operators_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::smaf::VM35FMOperator >*
VM35FMVoice::mutable_operators() {
  // @@protoc_insertion_point(field_mutable_list:smaf.VM35FMVoice.operators)
  return &operators_;
}
inline const ::google::protobuf::RepeatedPtrField< ::smaf::VM35FMOperator >&
VM35FMVoice::operators() const {
  // @@protoc_insertion_point(field_list:smaf.VM35FMVoice.operators)
  return operators_;
}

// -------------------------------------------------------------------

// VM35FMOperator

// uint32 multi = 1;
inline void VM35FMOperator::clear_multi() {
  multi_ = 0u;
}
inline ::google::protobuf::uint32 VM35FMOperator::multi() const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMOperator.multi)
  return multi_;
}
inline void VM35FMOperator::set_multi(::google::protobuf::uint32 value) {
  
  multi_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35FMOperator.multi)
}

// uint32 dt = 2;
inline void VM35FMOperator::clear_dt() {
  dt_ = 0u;
}
inline ::google::protobuf::uint32 VM35FMOperator::dt() const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMOperator.dt)
  return dt_;
}
inline void VM35FMOperator::set_dt(::google::protobuf::uint32 value) {
  
  dt_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35FMOperator.dt)
}

// uint32 ar = 3;
inline void VM35FMOperator::clear_ar() {
  ar_ = 0u;
}
inline ::google::protobuf::uint32 VM35FMOperator::ar() const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMOperator.ar)
  return ar_;
}
inline void VM35FMOperator::set_ar(::google::protobuf::uint32 value) {
  
  ar_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35FMOperator.ar)
}

// uint32 dr = 4;
inline void VM35FMOperator::clear_dr() {
  dr_ = 0u;
}
inline ::google::protobuf::uint32 VM35FMOperator::dr() const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMOperator.dr)
  return dr_;
}
inline void VM35FMOperator::set_dr(::google::protobuf::uint32 value) {
  
  dr_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35FMOperator.dr)
}

// uint32 sr = 5;
inline void VM35FMOperator::clear_sr() {
  sr_ = 0u;
}
inline ::google::protobuf::uint32 VM35FMOperator::sr() const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMOperator.sr)
  return sr_;
}
inline void VM35FMOperator::set_sr(::google::protobuf::uint32 value) {
  
  sr_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35FMOperator.sr)
}

// uint32 rr = 6;
inline void VM35FMOperator::clear_rr() {
  rr_ = 0u;
}
inline ::google::protobuf::uint32 VM35FMOperator::rr() const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMOperator.rr)
  return rr_;
}
inline void VM35FMOperator::set_rr(::google::protobuf::uint32 value) {
  
  rr_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35FMOperator.rr)
}

// uint32 sl = 7;
inline void VM35FMOperator::clear_sl() {
  sl_ = 0u;
}
inline ::google::protobuf::uint32 VM35FMOperator::sl() const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMOperator.sl)
  return sl_;
}
inline void VM35FMOperator::set_sl(::google::protobuf::uint32 value) {
  
  sl_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35FMOperator.sl)
}

// uint32 tl = 8;
inline void VM35FMOperator::clear_tl() {
  tl_ = 0u;
}
inline ::google::protobuf::uint32 VM35FMOperator::tl() const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMOperator.tl)
  return tl_;
}
inline void VM35FMOperator::set_tl(::google::protobuf::uint32 value) {
  
  tl_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35FMOperator.tl)
}

// uint32 ksl = 9;
inline void VM35FMOperator::clear_ksl() {
  ksl_ = 0u;
}
inline ::google::protobuf::uint32 VM35FMOperator::ksl() const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMOperator.ksl)
  return ksl_;
}
inline void VM35FMOperator::set_ksl(::google::protobuf::uint32 value) {
  
  ksl_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35FMOperator.ksl)
}

// uint32 dam = 10;
inline void VM35FMOperator::clear_dam() {
  dam_ = 0u;
}
inline ::google::protobuf::uint32 VM35FMOperator::dam() const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMOperator.dam)
  return dam_;
}
inline void VM35FMOperator::set_dam(::google::protobuf::uint32 value) {
  
  dam_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35FMOperator.dam)
}

// uint32 dvb = 11;
inline void VM35FMOperator::clear_dvb() {
  dvb_ = 0u;
}
inline ::google::protobuf::uint32 VM35FMOperator::dvb() const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMOperator.dvb)
  return dvb_;
}
inline void VM35FMOperator::set_dvb(::google::protobuf::uint32 value) {
  
  dvb_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35FMOperator.dvb)
}

// uint32 fb = 12;
inline void VM35FMOperator::clear_fb() {
  fb_ = 0u;
}
inline ::google::protobuf::uint32 VM35FMOperator::fb() const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMOperator.fb)
  return fb_;
}
inline void VM35FMOperator::set_fb(::google::protobuf::uint32 value) {
  
  fb_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35FMOperator.fb)
}

// uint32 ws = 13;
inline void VM35FMOperator::clear_ws() {
  ws_ = 0u;
}
inline ::google::protobuf::uint32 VM35FMOperator::ws() const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMOperator.ws)
  return ws_;
}
inline void VM35FMOperator::set_ws(::google::protobuf::uint32 value) {
  
  ws_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35FMOperator.ws)
}

// bool xof = 14;
inline void VM35FMOperator::clear_xof() {
  xof_ = false;
}
inline bool VM35FMOperator::xof() const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMOperator.xof)
  return xof_;
}
inline void VM35FMOperator::set_xof(bool value) {
  
  xof_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35FMOperator.xof)
}

// bool sus = 15;
inline void VM35FMOperator::clear_sus() {
  sus_ = false;
}
inline bool VM35FMOperator::sus() const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMOperator.sus)
  return sus_;
}
inline void VM35FMOperator::set_sus(bool value) {
  
  sus_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35FMOperator.sus)
}

// bool ksr = 16;
inline void VM35FMOperator::clear_ksr() {
  ksr_ = false;
}
inline bool VM35FMOperator::ksr() const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMOperator.ksr)
  return ksr_;
}
inline void VM35FMOperator::set_ksr(bool value) {
  
  ksr_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35FMOperator.ksr)
}

// bool eam = 17;
inline void VM35FMOperator::clear_eam() {
  eam_ = false;
}
inline bool VM35FMOperator::eam() const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMOperator.eam)
  return eam_;
}
inline void VM35FMOperator::set_eam(bool value) {
  
  eam_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35FMOperator.eam)
}

// bool evb = 18;
inline void VM35FMOperator::clear_evb() {
  evb_ = false;
}
inline bool VM35FMOperator::evb() const {
  // @@protoc_insertion_point(field_get:smaf.VM35FMOperator.evb)
  return evb_;
}
inline void VM35FMOperator::set_evb(bool value) {
  
  evb_ = value;
  // @@protoc_insertion_point(field_set:smaf.VM35FMOperator.evb)
}

// -------------------------------------------------------------------

// VM35PCMVoice

// bytes raw_data = 1;
inline void VM35PCMVoice::clear_raw_data() {
  raw_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VM35PCMVoice::raw_data() const {
  // @@protoc_insertion_point(field_get:smaf.VM35PCMVoice.raw_data)
  return raw_data_.GetNoArena();
}
inline void VM35PCMVoice::set_raw_data(const ::std::string& value) {
  
  raw_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:smaf.VM35PCMVoice.raw_data)
}
#if LANG_CXX11
inline void VM35PCMVoice::set_raw_data(::std::string&& value) {
  
  raw_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:smaf.VM35PCMVoice.raw_data)
}
#endif
inline void VM35PCMVoice::set_raw_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  raw_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:smaf.VM35PCMVoice.raw_data)
}
inline void VM35PCMVoice::set_raw_data(const void* value, size_t size) {
  
  raw_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:smaf.VM35PCMVoice.raw_data)
}
inline ::std::string* VM35PCMVoice::mutable_raw_data() {
  
  // @@protoc_insertion_point(field_mutable:smaf.VM35PCMVoice.raw_data)
  return raw_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VM35PCMVoice::release_raw_data() {
  // @@protoc_insertion_point(field_release:smaf.VM35PCMVoice.raw_data)
  
  return raw_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VM35PCMVoice::set_allocated_raw_data(::std::string* raw_data) {
  if (raw_data != NULL) {
    
  } else {
    
  }
  raw_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), raw_data);
  // @@protoc_insertion_point(field_set_allocated:smaf.VM35PCMVoice.raw_data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace smaf

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::smaf::VM35FMVoiceVersion> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::smaf::VM35FMVoiceVersion>() {
  return ::smaf::VM35FMVoiceVersion_descriptor();
}
template <> struct is_proto_enum< ::smaf::VoiceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::smaf::VoiceType>() {
  return ::smaf::VoiceType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_smaf_2eproto__INCLUDED
